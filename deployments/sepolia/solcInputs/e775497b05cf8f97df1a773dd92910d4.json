{
  "language": "Solidity",
  "sources": {
    "contracts/BeA.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\ncontract BeA {\n\n// Double mapping pour stocker les hash des utilisateurs\nmapping(address => mapping(uint256 => bytes32)) private userHashes;\n\n// Event pour notifier l'ajout d'un hash\nevent HashAdded(address indexed user, uint256 indexed index, bytes32 hash);\n\n// Fonction pour ajouter un hash\nfunction addHash(uint256 index, bytes32 hash) external {\n    userHashes[msg.sender][index] = hash;\n    emit HashAdded(msg.sender, index, hash);\n}\n\n// Fonction pour v√©rifier si un hash existe\nfunction checkHash(address user, uint256 index) external view returns (bool) {\n    return userHashes[user][index] != bytes32(0);\n}\n\n\n}"
    }
  },
  "settings": {
    "evmVersion": "paris",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}